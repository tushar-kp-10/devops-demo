# name: Test and Build

# on:
#   push:
#     branches:
#     - main
#     # paths:
#     # - '*/'

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     #Setting up environment
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Docker Setup
#       uses: docker/setup-buildx-action@v2

#     - name: Docker Credentials
#       uses: docker/login-action@v2
#       with:
#         username: ${{ secrets.DOCKER_USERNAME }}
#         password: ${{ secrets.DOCKER_PASSWORD }}

#     - name: Docker tag
#       id: version
#       run: |
#         VERSION=v$(date +"%Y%m%d%H%M%S")
#         echo "VERSION=$VERSION" >> $GITHUB_ENV

#     # Build the Docker Image
#     - name: Build Docker Image
#       run: |
#         docker build -t tushar101010/devops-demo:${{ env.VERSION }} .

#     # Push the Docker Image
#     - name: Push Docker Image
#       run: |
#         docker push tushar101010/devops-demo:${{ env.VERSION }}

#     # UPdate the K8s Manifest Files
#     - name: Update K8s Manifests
#       run: |
#         cat deploy/deployment.yaml
#         sed -i "s|image: tushar101010/devops-demo:.*|image: tushar101010/devops-demo:${{ env.VERSION }}|g" deploy/deployment.yaml
#         cat deploy/deployment.yaml

#     # Update Github
#     - name: Commit the changes
#       run: |
#         git config --global user.email "<>"
#         git config --global user.name "GitHub Actions Bot"
#         git checkout main
#         git add deploy/deployment.yaml
#         git commit -m "Update deploy.yaml with new image version - ${{ env.VERSION }}"
#         git push origin main


name: Test and Build

on:
  push:
    branches:
      - main
    # paths:
    #   - "*/"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Docker buildx setup
      - name: Docker Setup
        uses: docker/setup-buildx-action@v2

      # Step 3: Login to Docker Hub
      - name: Docker Credentials
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 4: Generate a version tag
      - name: Docker tag
        id: version
        run: |
          VERSION=v$(date +"%Y%m%d%H%M%S")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Step 5: Build Docker image
      - name: Build Docker Image
        run: |
          docker build -t tushar101010/devops-demo:${{ env.VERSION }} .

      # Step 6: Push Docker image to Docker Hub
      - name: Push Docker Image
        run: |
          docker push tushar101010/devops-demo:${{ env.VERSION }}

      # Step 7: Update the Kubernetes manifest
      - name: Update K8s Manifests
        run: |
          sed -i "s|image: tushar101010/devops-demo:.*|image: tushar101010/devops-demo:${{ env.VERSION }}|g" deploy/deployment.yaml
          cat deploy/deployment.yaml

      # Step 8: Commit the changes only if needed
      - name: Commit the changes
        run: |
          git config --global user.email "github-actions@example.com"
          git config --global user.name "GitHub Actions Bot"
          git checkout main
          git add deploy/deployment.yaml

          if git diff --cached --quiet; then
            echo "âœ… No changes to commit."
          else
            git commit -m "Update deploy.yaml with new image version - ${{ env.VERSION }}"
            git push origin main
